from . import assign_judges
from flask import (
    Blueprint, request, flash, g, redirect, render_template, session, url_for
)

bp = Blueprint('assign', __name__)

ALLOWED_EXTENSIONS = {"csv", "txt"}
UPLOAD_FOLDER = '/uploads'

def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@bp.route('/upload', methods=["GET", "POST"])
def upload():
    return render_template("upload.html")

@bp.route('/display', methods=["GET", "POST"])
def display():
    if request.method == 'POST':
        #if 'file' not in request.files['sfile'] \
         #  or 'file' not in request.files['jfile'] \
          # or 'file' not in request.files['ifile']:
           # flash('No file attached')
            #return redirect(request.url)
        sub_file = request.form.get['sfile']
        judge_file = request.form.get['jfile']
        per_team = request.form.get['ifile']
        if not (sub_file and allowed_file(sub_file.filename)) \
           or (judge_file and allowed_file(judge_file.filename)):
            flash('Incorrect file type')
            return redirect(request.url)
        if not isinstance(per_team, int):
            flash('Enter an integer')
            return redirect(request.url)
        s = secure_filename(sub_file.filename)
        j = secure_filename(judge_file.filename)
        return jsonify(read_data(s, j, per_team))
